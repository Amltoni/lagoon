- name: "{{ testname }} - init git, add files, commit, git push"
  hosts: localhost
  serial: 1
  vars:
    git_files: "features/"
    branch: "{{ source_environment }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/git-init.yaml
  - ansible.builtin.include_tasks: ../../tasks/git-add-commit-push.yaml

- name: "{{ testname }} - api deployEnvironmentBranch on {{ project }} for branch {{ source_environment }}, which will deploy our source environment"
  hosts: localhost
  serial: 1
  vars:
    branch: "{{ source_environment }}"
    project: "{{ project }}"
    namespace: "{{ project | regex_replace('_', '-') }}-{{ source_environment | regex_replace('/', '-') }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/deploy-no-sha.yaml

- ansible.builtin.import_playbook: ../../checks/check-branch-sha.yaml
  vars:
    expected_head: "{{ current_head }}"
    expected_branch: "{{ source_environment }}"
    project: "{{ project }}"
    url: "{{ check_url_source }}"

- name: "{{ testname }} - api deployEnvironmentPromote for target environment {{ promote_environment }} with source environment {{ source_environment }} on {{ project }}"
  hosts: localhost
  serial: 1
  vars:
    to_promote_environment: "{{ promote_environment }}"
    source_environment: "{{ source_environment }}"
    project: "{{ project }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/promote.yaml

- name: "{{ testname }} - api check deployment source user and type"
  hosts: localhost
  serial: 1
  vars:
    namespace: "{{ project | regex_replace('_', '-') }}-{{ promote_environment | regex_replace('/', '-') }}"
    sourceUser: "test-suite"
    sourceType: "API"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/get-latest-deployment-source.yaml

- ansible.builtin.import_playbook: ../../checks/check-branch-sha.yaml
  vars:
    expected_head: "{{ current_head }}"
    expected_branch: ""
    expected_branch_buildtime: "{{ source_environment }}"
    project: "{{ project }}"
    url: "{{ check_url_promote }}"

- name: "{{ testname }} - api deleteEnvironment on {{ project }}, which should remove all resources"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    branch: "{{ promote_environment }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-environment.yaml

- name: "{{ testname }} - api deleteEnvironment on {{ project }}, which should remove all resources"
  hosts: localhost
  serial: 1
  vars:
    project: "{{ project }}"
    branch: "{{ source_environment }}"
  tasks:
  - ansible.builtin.include_tasks: ../../tasks/api/delete-environment.yaml

- name: "{{ testname }} - check if site for {{ project }} does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "{{ check_url_promote }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml

- name: "{{ testname }} - check if site for {{ project }} does not exist anymore"
  hosts: localhost
  serial: 1
  vars:
    url: "{{ check_url_source }}"
    expected_returncode: "{{ del_status_code }}"
  tasks:
  - ansible.builtin.include_tasks: ../../checks/check-url-returncode.yaml
